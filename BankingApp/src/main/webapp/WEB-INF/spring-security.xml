<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<http auto-config="true">
		<intercept-url pattern="/employee/AdminDashboard" access = "hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/employee/Tier2Dashboard" access = "hasRole('ROLE_MANAGER')"/>
		
		<form-login 
	        login-page="/login/Login" 
	       login-processing-url="/j_spring_security_check"
	       authentication-success-handler-ref="customAuthenticationSuccessHandler"
	    ></form-login>
       <session-management invalid-session-url="/login" session-fixation-protection="newSession" >
		   	<concurrency-control  max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
		<logout logout-success-url="/login" delete-cookies="JSESSIONID" invalidate-session="true"/>
	<csrf disabled="true"/>
	</http>
	
	<!-- Define the beans -->

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
			<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		 	<beans:property name="url" value="jdbc:mysql://localhost:3306/banking"/>
		 	<beans:property name="username" value="root"/>
		  	<beans:property name="password" value="1234"/> 
	</beans:bean>
	
	<beans:bean id="customAuthenticationSuccessHandler" class="com.group10.controllers.security.CustomAuthenticationSuccessHandler"/>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
	<beans:bean id="loginAttemptsDaoImpl" class="com.group10.dao.loginAttempts.LoginAttemptsDaoImpl" >
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	 
    <beans:bean id="customUserDetailsService" class="com.group10.dao.loginAttempts.CustomUserDetailsService">
		<beans:property name="usersByUsernameQuery" value="select * from user_login where username = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="select username, role from user_login where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- Define the custom AUthentication bean -->
	<beans:bean id = "myAuthentication" class = "com.group10.controllers.security.MyAuthentication">
				<beans:property name = "userDetailsService" ref="customUserDetailsService"/>	
			 	<beans:property name = "userDetails" ref="loginAttemptsDaoImpl"/>
			 	<beans:property name = "passwordEncoder" ref="encoder"/>	 	
	</beans:bean>
		
	<authentication-manager>
		<authentication-provider>
			  <user-service>
		<user name="harsha@gmail.com" password="1234" authorities="ROLE_ADMIN" />
		<user name="kevin@gmail.com" password="1234" authorities="ROLE_MANAGER" />
	   </user-service>
	   </authentication-provider>
	</authentication-manager>
	
<!-- call the custom Authentication for all the stored users 
	
	<authentication-manager>
		<authentication-provider
			ref = "myAuthentication"/>
	</authentication-manager>
-->

</beans:beans>